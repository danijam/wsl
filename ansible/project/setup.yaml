---
- name: Setup WSL Distro
  hosts: all
  become: true

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Upgrade all packages to the latest version
      apt:
        upgrade: dist
        update_cache: yes
      become: yes

    - name: Install Common dependencies
      apt:
        name:
          - ca-certificates
          - curl
          - apt-transport-https
          - lsb-release
          - gnupg
        state: present

    # Add the git ppa
    - name: Add Git PPA
      apt_repository:
        repo: ppa:git-core/ppa
        state: present

    # Install git
    - name: Install git
      apt:
        name: git
        state: latest
        update_cache: true

    # Configure git credential manager for WSL
    - name: Set global Git credential helper
      ansible.builtin.git_config:
        scope: global
        name: credential.helper
        value: "/mnt/c/Program\\ Files/Git/mingw64/bin/git-credential-manager.exe"
      become: yes
      become_user: "{{ username }}"

    # Configure the Azure DevOps Helper # git config --global credential.https://dev.azure.com.useHttpPath true
    - name: Set global Git credential helper ADO
      ansible.builtin.git_config:
        scope: global
        name: credential.https://dev.azure.com.useHttpPath
        value: true
      become: yes
      become_user: "{{ username }}"

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Update apt and install docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: true

    - name: Add docker group
      ansible.builtin.group:
        name: docker
        state: present
      become: yes

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ username }}"
        groups: docker
        append: yes
      become: yes

    - name: Copy etc files
      ansible.builtin.copy:
        src: /home/{{ username }}/ansible/etc/
        dest: /etc/
        owner: root
        group: root
        mode: 0644
      become: yes

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes
      become: yes

    - name: Restart docker
      ansible.builtin.systemd:
        name: docker.service
        state: restarted
      become: yes

    - name: Ensure the /etc/apt/keyrings directory exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Download Microsoft GPG key
      ansible.builtin.get_url:
        url: https://packages.microsoft.com/keys/microsoft.asc
        dest: /tmp/microsoft.asc
        mode: "0644"

    - name: Import Microsoft GPG key
      ansible.builtin.shell:
        cmd: gpg --dearmor -o /etc/apt/keyrings/microsoft.gpg /tmp/microsoft.asc
        creates: /etc/apt/keyrings/microsoft.gpg

    - name: Set permissions on the Microsoft GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings/microsoft.gpg
        mode: "0644"

    - name: Add the Azure CLI software repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ {{ ansible_distribution_release }} main"
        state: present
        filename: azure-cli
      become: yes

    - name: Update apt and install azure-cli
      apt:
        name:
          - azure-cli
        state: latest
        update_cache: true

    - name: Install k9s using snap
      ansible.builtin.snap:
        name: k9s
        classic: yes
        state: present

    - name: Download Helm GPG key
      ansible.builtin.get_url:
        url: https://baltocdn.com/helm/signing.asc
        dest: /tmp/helm.asc
        mode: "0644"

    - name: Import Helm GPG key
      ansible.builtin.shell:
        cmd: gpg --dearmor -o /usr/share/keyrings/helm.gpg /tmp/helm.asc
        creates: /usr/share/keyrings/helm.gpg

    - name: Add the Helm software repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main"
        state: present
        filename: helm-stable-debian
      become: yes

    - name: Update apt and install helm
      apt:
        name:
          - helm
        state: latest
        update_cache: true
      become: yes

      # Install kubectl
    - name: Download kubectl GPG key
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        dest: /tmp/kubectl.key
        mode: "0644"

    - name: Import kubectl GPG key
      ansible.builtin.shell:
        cmd: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubectl.key
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add the kubectl software repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        state: present
        filename: helm-stable-debian
      become: yes

    - name: Update apt and install kubectl
      apt:
        name:
          - kubectl
        state: latest
        update_cache: true
      become: yes
